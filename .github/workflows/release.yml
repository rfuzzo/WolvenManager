name: Release

on:
  workflow_dispatch:

jobs:
  draft-release:
    runs-on: windows-latest
    outputs:
      upload_url: ${{ steps.draft-release.outputs.upload_url }}

    steps:
    - name: Create Release
      id: draft-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: commit-${{ github.sha }}
        draft: true

  release:
    needs: draft-release
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: dotnet clean
      run: dotnet clean --configuration Release && dotnet nuget locals all --clear
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Get version
      uses: naminodarie/get-net-sdk-project-versions-action@v1
      id: get-version
      with:
        proj-path: ./WolvenManager.UI/WolvenManager.UI.csproj
    - run: echo "${{steps.get-version.outputs.version}}"
      
    - name: Publish
      run: dotnet publish ./WolvenManager.UI/WolvenManager.UI.csproj -o publish/full --no-self-contained --no-restore -r win-x64 -c Release -f net5.0-windows
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: wolvenmanager-${{steps.get-version.outputs.version}}
        path: ./publish/full

    - name: zip
      uses: papeloto/action-zip@v1
      with:
        files: ./publish/full
        dest: wolvenmanager-${{steps.get-version.outputs.version}}.zip
        
    - name: Create Installer
      run: ./WolvenManager.Installer/InnoSetup/ISCC/ISCC.exe /dMyAppBaseDir="../../publish/full/" ./WolvenManager.Installer/InnoSetup/installer.iss
        
    - name: Upload App
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{needs.draft-release.outputs.upload_url }}
        asset_path: ./wolvenmanager-${{steps.get-version.outputs.version}}.zip
        asset_name: wolvenmanager-${{steps.get-version.outputs.version}}.zip
        asset_content_type: application/zip
    - name: Upload Installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{needs.draft-release.outputs.upload_url }}
        asset_path: ./WolvenManager.Installer/InnoSetup/Output/WolvenManager-installer-${{steps.get-version.outputs.version}}.exe
        asset_name: WolvenManager-installer-${{steps.get-version.outputs.version}}.exe
        asset_content_type: application/zip
