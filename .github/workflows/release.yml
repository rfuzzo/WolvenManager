name: Release

on:
  push:
    tags:
    - '*'
    
jobs:
  
  release:
    runs-on: windows-latest
    outputs:
      version: ${{steps.get-version.outputs.version}}

    steps:
    # setup  
    - name: checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - uses: microsoft/setup-msbuild@v1.0.2
      
    # environmental variables
    - run: echo "PROJ=./WolvenManager.UI/WolvenManager.UI.csproj" >> $env:GITHUB_ENV
    - run: echo "OUT=./publish/full" >> $env:GITHUB_ENV
    - run: echo "FINALOUT=./publish" >> $env:GITHUB_ENV
    - run: echo "NAME=WolvenManager" >> $env:GITHUB_ENV
    - name: Get version
      uses: naminodarie/get-net-sdk-project-versions-action@v1
      id: get-version
      with:
        proj-path:  ${{env.PROJ}}
    - run: echo "VERSION=${{steps.get-version.outputs.version}}" >> $env:GITHUB_ENV
    - run: echo "PORTABLE=${{env.NAME}}-${{env.VERSION}}.zip" >> $env:GITHUB_ENV
    - run: echo "INSTALLER=${{env.NAME}}-installer-${{env.VERSION}}.exe" >> $env:GITHUB_ENV
    - run: echo "MANIFEST=manifest.json" >> $env:GITHUB_ENV
      
    # Publish app
    - run: dotnet publish ${{env.PROJ}} -o ${{env.OUT}} -c Release

    # instalelr
    - run: .\InnoSetup\ISCC\ISCC.exe /O"publish" /dMyAppBaseDir="..\publish\full\" .\InnoSetup\installer.iss

    # PORTABLE
    - uses: actions/upload-artifact@v2
      with:
        name: ${{env.PORTABLE}}
        path: ${{env.FINALOUT}}/${{env.PORTABLE}}
    # INSTALLER
    - uses: actions/upload-artifact@v2
      with:
        name: ${{env.INSTALLER}}
        path: ${{env.FINALOUT}}/${{env.INSTALLER}}

    # RELEASE
    - name: Release
      uses: ncipollo/release-action@v1
      with:
        draft: true
        generateReleaseNotes: true
        artifacts: "${{ env.FINALOUT }}/*.zip"
        bodyFile: "RELEASE.md"
        token: ${{ secrets.GITHUB_TOKEN }}
        
  
  
  
  
  
  
