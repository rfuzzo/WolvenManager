name: Release

on:
  workflow_dispatch:

jobs:
  
  release:
    runs-on: windows-latest
    outputs:
      version: ${{steps.get-version.outputs.version}}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: dotnet clean
      run: dotnet clean --configuration Release && dotnet nuget locals all --clear
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Get version
      uses: naminodarie/get-net-sdk-project-versions-action@v1
      id: get-version
      with:
        proj-path: ./WolvenManager.UI/WolvenManager.UI.csproj
    - run: echo "${{steps.get-version.outputs.version}}"
      
    - name: Publish app
      run: dotnet publish ./WolvenManager.UI/WolvenManager.UI.csproj -o publish/full --no-self-contained --no-restore -r win-x64 -c Release -f net5.0-windows
    - name: Publish manifest exe
      run: dotnet publish .\WolvenManager.Installer\WolvenManager.Installer.csproj -o .\ -p:PublishSingleFile=true --no-self-contained -r win-x64 -c Release -f net5.0

    - name: "create assets"
      run: .\WolvenManager.Installer.exe create -a .\publish\full\WolvenManager.UI.exe -o .\publish

    - name: Create Installer
      run: .\InnoSetup\ISCC\ISCC.exe /O"publish" /dMyAppBaseDir="..\publish\full\" .\InnoSetup\installer.iss
    
    - name: Create manifest.json
      run: .\WolvenManager.Installer.exe manifest -a .\publish\full\WolvenManager.UI.exe -i .\publish -o .\publish

    - name: Upload Artifact App
      uses: actions/upload-artifact@v2
      with:
        name: WolvenManager-${{steps.get-version.outputs.version}}.zip
        path: ./publish/WolvenManager-${{steps.get-version.outputs.version}}.zip
    - name: Upload Artifact Installer
      uses: actions/upload-artifact@v2
      with:
        name: WolvenManager-installer-${{steps.get-version.outputs.version}}.exe
        path: ./publish/WolvenManager-installer-${{steps.get-version.outputs.version}}.exe
    - name: Upload Artifact Manifest
      uses: actions/upload-artifact@v2
      with:
        name: manifest.json
        path: ./publish/manifest.json
        
        
    - name: Changelog
      uses: scottbrenner/generate-changelog-action@master
      id: Changelog
      env:
        REPO: ${{ github.repository }}
        
    - name: Create Release
      id: draft-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: version-${{steps.get-version.outputs.version}}
        draft: true      
        release_name: Release ${{ github.ref }}
        body: |
            ${{ steps.Changelog.outputs.changelog }}
        artifacts: |
          "manifest.json", 
          "WolvenManager-installer-${{steps.get-version.outputs.version}}.exe", 
          "WolvenManager-${{steps.get-version.outputs.version}}.zip"
        
  
  
  
  
  
  
